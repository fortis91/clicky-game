{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","onClick","shuffleFriends","id","className","alt","name","src","image","occupation","location","Wrapper","children","Title","App","state","friends","removeFriend","_this","filter","friend","setState","shuffle","array","j","length","console","log","selected","clear","t","i","m","Math","floor","random","newFriends","_this2","this","components_Wrapper","components_Title","map","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+tFAoCeA,MAjCf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,QAAMC,QAAS,kBAAMJ,EAAMK,eAAeL,EAAMM,KAAKC,UAAU,UAE/DN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,SAEnCV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAEbN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMS,MAEhCR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCH,EAAMY,YAEtCX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BH,EAAMa,qBCd/BC,MAJf,SAAiBd,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMe,iBCG1BC,MAJf,SAAehB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAASP,EAAMe,kBC8FvBE,6MA1FbC,MAAQ,CACNC,aAGFC,aAAe,SAAAd,GAEb,IAAMa,EAAUE,EAAKH,MAAMC,QAAQG,OAAO,SAAAC,GAAM,OAAIA,EAAOjB,KAAOA,IAElEe,EAAKG,SAAS,CAAEL,eAIlBM,QAAU,SAACC,EAAOpB,GAChB,IAAK,IAAIqB,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC5BD,EAAMC,GAAGrB,KAAOA,IAClBuB,QAAQC,IAAIJ,EAAMC,GAAGlB,MACjBiB,EAAMC,GAAGI,UACXF,QAAQG,QACRH,QAAQC,IAAI,SAEZJ,EAAMC,GAAGI,UAAW,GAK1B,IADA,IAAsBE,EAAGC,EAArBC,EAAIT,EAAME,OACPO,GACLD,EAAIE,KAAKC,MAAMD,KAAKE,SAAWH,KAC/BF,EAAIP,EAAMS,GACVT,EAAMS,GAAKT,EAAMQ,GACjBR,EAAMQ,GAAKD,EAGb,OAAOP,KAGTrB,eAAiB,SAACC,GAQhB,IAAIiC,EAAalB,EAAKI,QAAQJ,EAAKH,MAAMC,QAASb,GAsBlDe,EAAKG,SAAS,CAAEe,wFAIT,IAAAC,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,qBACCF,KAAKvB,MAAMC,QAAQyB,IAAI,SAAArB,GAAM,OAC5BtB,EAAAC,EAAAC,cAAC0C,EAAD,CAEExC,eAAgBmC,EAAKnC,eACrBC,GAAIiB,EAAOjB,GACXwC,IAAKvB,EAAOjB,GACZG,KAAMc,EAAOd,KACbE,MAAOY,EAAOZ,MACdC,WAAYW,EAAOX,WACnBC,SAAUU,EAAOV,qBApFXkC,mBCDlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a4176642.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <span onClick={() => props.shuffleFriends(props.id)} className=\"remove\">\n\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n      {/* <span onClick={() => props.shuffleFriends()} className=\"remove\">\n        ùòÖ\n      </span> */}\n      </div>\n      </span>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  //fisher shuffle - https://bost.ocks.org/mike/shuffle/\n  shuffle = (array, id) => {\n    for (var j = 0; j < array.length; j++) {\n      if (array[j].id === id) {\n        console.log(array[j].name)\n        if (array[j].selected) {\n          console.clear()\n          console.log('Lost');\n        } else {\n          array[j].selected = true;\n        }\n      }\n    }\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.floor(Math.random() * m--);\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  shuffleFriends = (id) => {\n    // let friends = [...this.state.friends];\n    // for (var i = 0; i < friends.length; i++) {\n    //   if (friends[i].id === id) {\n    //     friends[i].selected = true;\n    //   }\n    // }\n    // let newFriends = this.shuffle(friends);\n    let newFriends = this.shuffle(this.state.friends, id);\n\n    // console.clear();\n\n    // for (var friend in newFriends) {\n    //   console.log(newFriends[friend]);\n    // }\n    // if (friends[id].selected) {\n    //   console.log(friends[id]);\n    //   console.log('already selected');\n    // } else {\n    //   console.log('new');\n    //   friends[id].selected = true;\n    // }\n    \n    // for (var friend in friends) {\n    //   if (friends[friend].selected) {\n    //     console.log(friends[friend]);\n    //   }\n    // }\n    // console.log(friends[id].name, friends[id].selected);\n\n    this.setState({ newFriends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            // removeFriend={this.removeFriend}\n            shuffleFriends={this.shuffleFriends}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}