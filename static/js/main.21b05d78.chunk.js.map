{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Nav/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","src","image","onClick","handleClick","id","Wrapper","children","Title","Nav","href","message","score","highScore","Jumbotron","App","state","friends","shuffleCards","t","i","newCards","_this","m","length","Math","floor","random","setState","array","selected","resetGame","newScore","shuffleFriends","newFriends","shuffle","_this2","this","components_Nav","components_Jumbotron","components_Wrapper","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"ozEAYeA,MATf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAK,GAAIC,IAAKN,EAAMO,MAAOC,QAAS,WAAQR,EAAMS,YAAaT,EAAMU,gBCAnEC,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCG1BC,iBCUAC,MAdf,SAAad,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeW,KAAK,KAAjC,eAGEd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYJ,EAAMgB,SAChCf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,UACUJ,EAAMiB,MADhB,kBACsCjB,EAAMkB,mBCCrCC,MATf,WACE,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,yBACCF,EAAAC,EAAAC,cAAA,kGCoFQiB,6MAjFbC,MAAQ,CACNC,UACAL,MAAO,EACPC,UAAW,EACXF,QAAS,iCAKXO,aAAe,WAGb,IAFA,IACyBC,EAAGC,EADxBC,EAAWC,EAAKN,MAAMC,QACtBM,EAAIF,EAASG,OACVD,GACLH,EAAIK,KAAKC,MAAMD,KAAKE,SAAWJ,KAC/BJ,EAAIE,EAASE,GACbF,EAASE,GAAKF,EAASD,GACvBC,EAASD,GAAKD,EAEhBG,EAAKM,SAAS,CAAEX,QAASI,OAG3BjB,YAAc,SAACC,GAEb,IADA,IAAIwB,EAAQP,EAAKN,MAAMC,QACdG,EAAI,EAAGA,EAAIS,EAAML,OAAQJ,IAChC,GAAIS,EAAMT,GAAGf,KAAOA,EAClB,GAAIwB,EAAMT,GAAGU,SACXR,EAAKS,gBACA,CACL,IAAIC,EAAWV,EAAKN,MAAMJ,MAAQ,EAC9BoB,EAAWV,EAAKN,MAAMH,YACxBS,EAAKM,SAAS,CAAEf,UAAWmB,IAC3BV,EAAKM,SAAS,CAAEjB,QAAS,8BAE3BW,EAAKM,SAAS,CAAEhB,MAAOoB,IACvBV,EAAKM,SAAS,CAAEjB,QAAS,+BACzBkB,EAAMT,GAAGU,UAAW,EAI1BR,EAAKM,SAASX,QAAW,CAAEA,QAASY,GACpCP,EAAKJ,kBAGPa,UAAY,WACV,IAAK,IAAIX,EAAI,EAAGA,EAAIH,EAAQO,OAAQJ,IAClCH,EAAQG,GAAGU,UAAW,EAExBR,EAAKM,SACH,CACEX,QAASA,EACTL,MAAO,EACPD,QAAS,0CAIfsB,eAAiB,SAAC5B,GAChB,IAAI6B,EAAaZ,EAAKa,QAAQb,EAAKN,MAAMC,QAASZ,GAClDiB,EAAKM,SAAS,CAAEM,wFAGT,IAAAE,EAAAC,KACP,OACEzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwC,EAAD,CAAK3B,QAAS0B,KAAKrB,MAAML,QAASC,MAAOyB,KAAKrB,MAAMJ,MAAOC,UAAWwB,KAAKrB,MAAMH,YACjFjB,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,KACGH,KAAKrB,MAAMC,QAAQwB,IAAI,SAAAC,GAAM,OAC5B9C,EAAAC,EAAAC,cAAC6C,EAAD,CACEV,eAAgBG,EAAKH,eACrB7B,YAAagC,EAAKhC,YAClBC,GAAIqC,EAAOrC,GACXuC,IAAKF,EAAOrC,GACZH,MAAOwC,EAAOxC,mBAzEV2C,mBCJlBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.21b05d78.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={\"\"} src={props.image} onClick={() => { props.handleClick((props.id)) }} />\n      </div>\n    </div>\n  );\n}\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Memory Game\n      </a>\n        <li className=\"nav-item\">{props.message}</li>\n        <li className=\"nav-item\">\n          Score: {props.score} | High Score: {props.highScore}\n        </li>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1>Memory Game</h1>\n       <p>Test your memory and earn points by clicking, just don't click the same flag twice.</p>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nimport Nav from './components/Nav';\nimport Jumbtron from './components/Jumbotron';\n\nclass App extends Component {\n  state = {\n    friends,\n    score: 0,\n    highScore: 0,\n    message: \"Click on any image to begin\"\n  };\n\n\n  //fisher shuffle - https://bost.ocks.org/mike/shuffle/\n  shuffleCards = () => {\n    let newCards = this.state.friends;\n    var m = newCards.length, t, i;\n    while (m) {\n      i = Math.floor(Math.random() * m--);\n      t = newCards[m];\n      newCards[m] = newCards[i];\n      newCards[i] = t;\n    }\n    this.setState({ friends: newCards });\n  }\n\n  handleClick = (id) => {\n    let array = this.state.friends;\n    for (var i = 0; i < array.length; i++) {\n      if (array[i].id === id) {\n        if (array[i].selected) {\n          this.resetGame();\n        } else {\n          let newScore = this.state.score + 1;\n          if (newScore > this.state.highScore) {\n            this.setState({ highScore: newScore });\n            this.setState({ message: \"Nice job, new high score\" })\n          }\n          this.setState({ score: newScore });\n          this.setState({ message: \"Good memory, keep it going\" })\n          array[i].selected = true;\n        }\n      }\n    }\n    this.setState.friends = ({ friends: array });\n    this.shuffleCards();\n  }\n\n  resetGame = () => {\n    for (var i = 0; i < friends.length; i++) {\n      friends[i].selected = false;\n    }\n    this.setState(\n      {\n        friends: friends,\n        score: 0,\n        message: 'Sorry, you already click that flag'\n      });\n  }\n\n  shuffleFriends = (id) => {\n    let newFriends = this.shuffle(this.state.friends, id);\n    this.setState({ newFriends });\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav message={this.state.message} score={this.state.score} highScore={this.state.highScore} />\n        <Jumbtron />\n        <Wrapper>\n          {this.state.friends.map(friend => (\n            <FriendCard\n              shuffleFriends={this.shuffleFriends}\n              handleClick={this.handleClick}\n              id={friend.id}\n              key={friend.id}\n              image={friend.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}